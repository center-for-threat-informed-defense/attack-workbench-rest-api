const js = require('@eslint/js');
const prettierConfig = require('eslint-config-prettier');
const globals = require('globals');

module.exports = [
    js.configs.recommended,
    prettierConfig,
    {
        languageOptions: {
            ecmaVersion: 13,
            sourceType: 'module',
            globals: {
                ...globals.es2021,    // Replaces env.es6
                ...globals.node,      // Replaces env.node
                ...globals.mocha,     // Replaces env.mocha
                Atomics: 'readonly',
                SharedArrayBuffer: 'readonly'
            },
            parserOptions: {
                ecmaVersion: 13,
                sourceType: 'module'
            }
        },
        ignores: [
            '**/node_modules/**',
            '**/app/api/**',
            '**/local-only/**'
        ],
        rules: {
            'accessor-pairs': 'error',
            'arrow-spacing': ['error', { before: true, after: true }],
            'class-methods-use-this': 'error',
            'default-case': 'error',
            'default-param-last': 'error',
            'dot-location': ['error', 'property'],
            'func-name-matching': 'error',
            'generator-star-spacing': 'error',
            'grouped-accessor-pairs': 'error',
            'id-blacklist': 'error',
            'id-match': 'error',
            'jsx-quotes': 'error',
            'linebreak-style': ['error', 'unix'],
            'lines-between-class-members': 'error',
            'max-classes-per-file': 'error',
            'max-nested-callbacks': 'error',
            'no-alert': 'error',
            'no-array-constructor': 'error',
            'no-buffer-constructor': 'error',
            'no-caller': 'error',
            'no-cond-assign': ['error', 'except-parens'],
            'no-confusing-arrow': 'error',
            'no-constant-condition': ['error', { checkLoops: false }],
            'no-constructor-return': 'error',
            'no-div-regex': 'error',
            'no-dupe-else-if': 'error',
            'no-duplicate-imports': 'error',
            'no-eval': 'error',
            'no-extend-native': 'error',
            'no-extra-bind': 'error',
            'no-extra-label': 'error',
            'no-floating-decimal': 'error',
            'no-implicit-coercion': ['error', {
                boolean: false,
                number: false,
                string: false
            }],
            'no-implicit-globals': 'error',
            'no-implied-eval': 'error',
            'no-import-assign': 'error',
            'no-inner-declarations': ['error', 'functions'],
            'no-iterator': 'error',
            'no-label-var': 'error',
            'no-labels': 'error',
            'no-lone-blocks': 'error',
            'no-mixed-requires': 'error',
            'no-multi-str': 'error',
            'no-native-reassign': 'error',
            'no-negated-in-lhs': 'error',
            'no-new': 'error',
            'no-new-func': 'error',
            'no-new-object': 'error',
            'no-new-require': 'error',
            'no-new-wrappers': 'error',
            'no-octal-escape': 'error',
            'no-path-concat': 'error',
            'no-proto': 'error',
            'no-restricted-globals': 'error',
            'no-restricted-imports': 'error',
            'no-restricted-modules': 'error',
            'no-restricted-properties': 'error',
            'no-restricted-syntax': 'error',
            'no-script-url': 'error',
            'no-self-assign': ['error', { props: false }],
            'no-setter-return': 'error',
            'no-sync': ['error', { allowAtRootLevel: true }],
            'no-template-curly-in-string': 'error',
            'no-throw-literal': 'error',
            'no-undef-init': 'error',
            'no-unmodified-loop-condition': 'error',
            'no-unneeded-ternary': 'error',
            'no-unused-vars': ['error', { args: 'none' }],
            'no-useless-computed-key': 'error',
            'no-useless-concat': 'error',
            'no-useless-constructor': 'error',
            'no-useless-rename': 'error',
            'no-whitespace-before-property': 'error',
            'nonblock-statement-body-position': 'error',
            'padding-line-between-statements': 'error',
            'prefer-const': 'error',
            'prefer-exponentiation-operator': 'error',
            'prefer-numeric-literals': 'error',
            'prefer-object-spread': 'error',
            'prefer-promise-reject-errors': 'error',
            'radix': ['error', 'always'],
            'require-await': 'error',
            'rest-spread-spacing': ['error', 'never'],
            'sort-imports': 'error',
            'space-unary-ops': 'error',
            'switch-colon-spacing': 'error',
            'symbol-description': 'error',
            'template-tag-spacing': 'error',
            'unicode-bom': ['error', 'never'],
            'yield-star-spacing': 'error'
        }
    }
];