paths:
  /api/collection-bundles:
    get:
      summary: 'Export a collection bundle'
      operationId: 'collection-bundle-export'
      description: |
        This endpoint exports a collection bundle and returns the bundle.
      tags:
        - 'Collection Bundles'
      parameters:
        - name: previewOnly
          in: query
          description: |
            Return the bundle but do not mark the collection as exported.
          schema:
            type: boolean
            default: false
        - name: collectionId
          in: query
          description: |
            The STIX id of the collection to export.
          schema:
            type: string
          example: 'x-mitre-collection--0bbd7841-f053-471a-9900-da4af02e40c2'
        - name: collectionModified
          in: query
          description: |
            The modified date of the collection to export.
            collectionId must be provided if collectionModified is provided.
          schema:
            type: string
          example: '2020-03-30T02:39:23.582Z'
          allowReserved: true
        - name: includeNotes
          in: query
          description: |
            If false, only include notes that are explicitly listed as part of the collection.
            If true, also include any note that references an object in the collection.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: 'An exported collection bundle.'
          content:
            application/json:
              schema:
                $ref: '../components/collection-bundles.yml#/components/schemas/collection-bundle'
    post:
      summary: 'Import a collection bundle'
      operationId: 'collection-bundle-import'
      description: |
        This endpoint imports a collection bundle into the workspace.
      tags:
        - 'Collection Bundles'
      parameters:
        - name: previewOnly
          in: query
          description: |
            Do not import the collection.
            Only determine what the results of the import would be if it were performed.
          schema:
            type: boolean
            default: false
        - name: checkOnly
          deprecated: true
          in: query
          description: |
            Replaced by previewOnly
          schema:
            type: boolean
            default: false
        - name: stream
          in: query
          description: |
            Stream import progress updates using Server-Sent Events (SSE).
            When enabled, the endpoint will stream progress events and the final result.
          schema:
            type: boolean
            default: false
        - name: forceImport
          in: query
          description: |
            Normally, the import of a collection bundle is cancelled if any objects violate certain rules.
            This parameter can be used to force an import of the collection bundle even if one or more objects violate a rule.
            The value of the parameter indicates which errors to override.
            Note that objects that violate the rule will not be imported, but the entire import will not be cancelled.
            This parameter may be set multiple times to select multiple overrides.
          schema:
            oneOf:
              - type: string
                enum:
                  - attack-spec-version-violations
                  - duplicate-collection
                  - all
              - type: array
                items:
                  type: string
                  enum:
                    - attack-spec-version-violations
                    - duplicate-collection
                    - all
          example: 'attack-spec-version-violations'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../components/collection-bundles.yml#/components/schemas/collection-bundle'
      responses:
        '201':
          description: 'The collection has been successfully imported.'
          content:
            application/json:
              schema:
                $ref: '../components/collections.yml#/components/schemas/collection'
