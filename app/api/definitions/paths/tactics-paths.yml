paths:
  /api/tactics:
    get:
      summary: 'Get a list of tactics'
      operationId: 'tactic-get-all'
      description: |
        This endpoint gets a list of tactics from the workspace.
        The list of tactics may include multiple versions of each tactic.
      tags:
        - 'Tactics'
      parameters:
        - name: limit
          in: query
          description: |
            The number of tactics to retrieve.
            The default (0) will retrieve all tactics.
          schema:
            type: number
            default: 0
        - name: offset
          in: query
          description: |
            The number of tactics to skip.
            The default (0) will start with the first tactic.
          schema:
            type: number
            default: 0
        - name: domain
          in: query
          description: |
            Only retrieve objects that contain the specified domain in their `x_mitre_domains` array.
            This parameter may be set multiple times to retrieve objects with any of the provided domains.
          schema:
            oneOf:
              - type: string
              - type: array
                items:
                  type: string
          example: 'mobile-attack'
        - name: state
          in: query
          description: |
            State of the object in the editing workflow.
            If this parameter is not set, objects will be retrieved regardless of state.
            This parameter may be set multiple times to retrieve objects with any of the provided states.
          schema:
            oneOf:
              - type: string
              - type: array
                items:
                  type: string
          example: 'work-in-progress'
        - name: includeRevoked
          in: query
          description: |
            Whether to include objects that have the `revoked` property set to true.
          schema:
            type: boolean
            default: false
        - name: includeDeprecated
          in: query
          description: |
            Whether to include objects that have the `x_mitre_deprecated` property set to true.
          schema:
            type: boolean
            default: false
        - name: search
          in: query
          description: |
            Only return objects where the provided search text occurs in the `attack_id`, `name`, or `description`.
            The search is case-insensitive.
          schema:
            type: string
          allowReserved: true
          example: 'windows'
        - name: lastUpdatedBy
          in: query
          description: |
            The STIX ID of the user who last modified the object
          schema:
            oneOf:
              - type: string
              - type: array
                items:
                  type: string
          example: 'identity--f568ad89-69bc-48e7-877b-43755f1d376d'
        - name: includePagination
          in: query
          description: |
            Whether to include pagination data in the returned value.
            Wraps returned objects in a larger object.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: 'A list of tactics.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../components/tactics.yml#/components/schemas/tactic'

    post:
      summary: 'Create a tactic'
      operationId: 'tactic-create'
      description: |
        This endpoint creates a new tactic in the workspace.
        If the `stix.id` property is set, it creates a new version of an existing tactic.
        If the `stix.id` property is not set, it creates a new tactic, generating a STIX id for it.
      tags:
        - 'Tactics'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              # $ref: '../components/tactics.yml#/components/schemas/tactic' # TODO delete after ADM integration complete
      responses:
        '201':
          description: 'The tactic has been successfully created.'
          content:
            application/json:
              schema:
                $ref: '../components/tactics.yml#/components/schemas/tactic'
        '400':
          description: 'Missing or invalid parameters were provided. The tactic was not created.'
        '409':
          description: 'Duplicate `stix.id` and `stix.modified` properties. The tactic was not created.'

  /api/tactics/{stixId}:
    get:
      summary: 'Get one or more versions of a tactic'
      operationId: 'tactic-get-one-id'
      description: |
        This endpoint gets a list of one or more versions of a tactic from the workspace, identified by their STIX id.
      tags:
        - 'Tactics'
      parameters:
        - name: stixId
          in: path
          description: 'STIX id of the tactic to retrieve'
          required: true
          schema:
            type: string
        - name: versions
          in: query
          description: |
            The versions of the tactic to retrieve.
            `all` gets all versions of the tactic, `latest` gets only the latest version.
          schema:
            type: string
            enum:
              - all
              - latest
            default: latest
      responses:
        '200':
          description: 'A list of tactics matching the requested STIX id.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../components/tactics.yml#/components/schemas/tactic'
        '404':
          description: 'A tactic with the requested STIX id was not found.'
    delete:
      summary: 'Delete a tactic'
      operationId: 'tactic-delete-all'
      description: |
        This endpoint deletes all versions of a tactic from the workspace.
        The tactic is identified by its STIX id.
      tags:
        - 'Tactics'
      parameters:
        - name: stixId
          in: path
          description: 'STIX id of the tactic to delete'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'All the tactic versions were successfully deleted.'
        '404':
          description: 'A tactic with the requested STIX id was not found.'

  /api/tactics/{stixId}/modified/{modified}:
    get:
      summary: 'Gets the version of a tactic matching the STIX id and modified date'
      operationId: 'tactic-get-by-id-and-modified'
      description: |
        This endpoint gets a single version of a tactic from the workspace, identified by its STIX id and modified date.
      tags:
        - 'Tactics'
      parameters:
        - name: stixId
          in: path
          description: 'STIX id of the tactic to retrieve'
          required: true
          schema:
            type: string
        - name: modified
          in: path
          description: 'modified date of the tactic to retrieve'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'The version of a tactic matching the STIX id and modified date.'
          content:
            application/json:
              schema:
                $ref: '../components/tactics.yml#/components/schemas/tactic'
        '404':
          description: 'A tactic with the requested STIX id and modified date was not found.'
    put:
      summary: 'Update a tactic'
      operationId: 'tactic-update'
      description: |
        This endpoint updates a single version of a tactic in the workspace, identified by its STIX id and modified date.
      tags:
        - 'Tactics'
      parameters:
        - name: stixId
          in: path
          description: 'STIX id of the tactic to update'
          required: true
          schema:
            type: string
        - name: modified
          in: path
          description: 'modified date of the tactic to update'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              # $ref: '../components/tactics.yml#/components/schemas/tactic' # TODO delete after ADM integration complete
      responses:
        '200':
          description: 'The tactic was updated.'
          content:
            application/json:
              schema:
                $ref: '../components/tactics.yml#/components/schemas/tactic'
        '400':
          description: 'Missing or invalid parameters were provided. The tactic was not updated.'
        '404':
          description: 'A tactic with the requested STIX id and modified date was not found.'
    delete:
      summary: 'Delete a tactic'
      operationId: 'tactic-delete'
      description: |
        This endpoint deletes a single version of a tactic from the workspace.
        The tactic is identified by its STIX id and modified date.
      tags:
        - 'Tactics'
      parameters:
        - name: stixId
          in: path
          description: 'STIX id of the tactic to delete'
          required: true
          schema:
            type: string
        - name: modified
          in: path
          description: 'modified date of the tactic to delete'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'The tactic was successfully deleted.'
        '404':
          description: 'A tactic with the requested STIX id and modified date was not found.'

  /api/tactics/{stixId}/modified/{modified}/techniques:
    get:
      summary: 'Gets the techniques associated with a tactic matching the STIX id and modified date'
      operationId: 'tactic-get-by-id-and-modified'
      description: |
        This endpoint gets a list of techniques associated with a tactic, identified by its STIX id and modified date.
      tags:
        - 'Tactics'
      parameters:
        - name: stixId
          in: path
          description: 'STIX id of the tactic'
          required: true
          schema:
            type: string
        - name: modified
          in: path
          description: 'modified date of the tactic'
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: |
            The number of tactics to retrieve.
            The default (0) will retrieve all tactics.
          schema:
            type: number
            default: 0
        - name: offset
          in: query
          description: |
            The number of tactics to skip.
            The default (0) will start with the first tactic.
          schema:
            type: number
            default: 0
        - name: includePagination
          in: query
          description: |
            Whether to include pagination data in the returned value.
            Wraps returned objects in a larger object.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: 'A list of techniques associated with the technique.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../components/techniques.yml#/components/schemas/technique'
        '404':
          description: 'A tactic with the requested STIX id and modified date was not found.'
