paths:
  /api/attack-objects:
    get:
      summary: 'Get a list of all ATT&CK objects'
      operationId: 'attack-object-get-all'
      description: |
        This endpoint gets a list of all ATT&CK objects from the workspace.
        The list of objects may include multiple versions of each ATT&CK object.
      tags:
        - 'ATT&CK Objects'
      parameters:
        - name: attackId
          in: query
          description: |
            The ATT&CK ID of the object to retrieve.
            Returns objects where the last version of the object matches the requested ATT&CK ID.
            This parameter may be set multiple times to retrieve objects with any of the provided ATT&CK IDs.
          schema:
            oneOf:
              - type: string
              - type: array
                items:
                  type: string
          example: 'T9999'
        - name: limit
          in: query
          description: |
            The number of objects to retrieve.
            The default (0) will retrieve all objects.
          schema:
            type: number
            default: 0
        - name: offset
          in: query
          description: |
            The number of objects to skip.
            The default (0) will start with the first object.
          schema:
            type: number
            default: 0
        - name: state
          in: query
          description: |
            State of the object in the editing workflow.
            If this parameter is not set, objects will be retrieved regardless of state.
            This parameter may be set multiple times to retrieve objects with any of the provided states.
          schema:
            oneOf:
              - type: string
              - type: array
                items:
                  type: string
          example: 'work-in-progress'
        - name: includeRevoked
          in: query
          description: |
            Whether to include objects that have the `revoked` property set to true.
          schema:
            type: boolean
            default: false
        - name: includeDeprecated
          in: query
          description: |
            Whether to include objects that have the `x_mitre_deprecated` property set to true.
          schema:
            type: boolean
            default: false
        - name: search
          in: query
          description: |
            Only return ATT&CK objects where the provided search text occurs in the `attack_id`, `name`, or `description`.
            The search is case-insensitive.
          schema:
            type: string
          allowReserved: true
          example: 'windows'
        - name: lastUpdatedBy
          in: query
          description: |
            The STIX ID of the user who last modified the object
          schema:
            oneOf:
              - type: string
              - type: array
                items:
                  type: string
          example: 'identity--f568ad89-69bc-48e7-877b-43755f1d376d'
        - name: includePagination
          in: query
          description: |
            Whether to include pagination data in the returned value.
            Wraps returned objects in a larger object.
          schema:
            type: boolean
            default: false
        - name: versions
          in: query
          description: |
            The versions of the ATT&CK objects to retrieve.
            `all` gets all versions of the objects, `latest` gets only the latest version.
          schema:
            type: string
            enum:
              - all
              - latest
            default: latest
      responses:
        '200':
          description: 'A list of ATT&CK Objects.'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '../components/collections.yml#/components/schemas/collection'
                    - $ref: '../components/groups.yml#/components/schemas/group'
                    - $ref: '../components/identities.yml#/components/schemas/identity'
                    - $ref: '../components/marking-definitions.yml#/components/schemas/marking-definition'
                    - $ref: '../components/matrices.yml#/components/schemas/matrix'
                    - $ref: '../components/mitigations.yml#/components/schemas/mitigation'
                    - $ref: '../components/relationships.yml#/components/schemas/relationship'
                    - $ref: '../components/software.yml#/components/schemas/software'
                    - $ref: '../components/tactics.yml#/components/schemas/tactic'
                    - $ref: '../components/techniques.yml#/components/schemas/technique'
  /api/attack-objects/attack-id/next:
    get:
      summary: 'Get the next available ATT&CK ID for a STIX type'
      operationId: 'attack-object-get-next-attack-id'
      description: |
        This endpoint generates the next available ATT&CK ID for a given STIX type.
        This is useful for previewing what ID will be assigned before creating a new object.
      tags:
        - 'ATT&CK Objects'
      parameters:
        - name: type
          in: query
          required: true
          description: |
            The STIX type for which to generate an ATT&CK ID.
            Must be a type that supports ATT&CK IDs.
          schema:
            type: string
            enum:
              - x-mitre-tactic
              - attack-pattern
              - intrusion-set
              - malware
              - tool
              - course-of-action
              - x-mitre-data-source
              - x-mitre-data-component
              - x-mitre-asset
              - campaign
              - x-mitre-detection-strategy
              - x-mitre-analytic
          example: 'x-mitre-tactic'
        - name: parentRef
          in: query
          required: false
          description: |
            The STIX ID of the parent technique (required for generating subtechnique IDs).
            Only applicable when type is 'attack-pattern' and you want a subtechnique ID.
          schema:
            type: string
          example: 'attack-pattern--12345678-1234-1234-1234-123456789abc'
      responses:
        '200':
          description: 'The next available ATT&CK ID for the specified type.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  attack_id:
                    type: string
                    description: 'The next available ATT&CK ID'
                    example: 'TA0042'
        '400':
          description: 'Bad request - missing or invalid type parameter, or type does not support ATT&CK IDs'
          content:
            text/plain:
              schema:
                type: string
                example: 'Missing required query parameter: type'
        '500':
          description: 'Server error - unable to generate ATT&CK ID'
          content:
            text/plain:
              schema:
                type: string
                example: 'Unable to generate next ATT&CK ID. Server error.'
